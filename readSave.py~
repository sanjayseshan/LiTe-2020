from tensorflow import keras
import numpy as np
import keras
from keras.datasets import imdb
from keras.models import Sequential
from keras.layers import LSTM
from keras.layers.embeddings import Embedding
from keras.preprocessing import sequence
from sklearn.metrics import confusion_matrix, precision_score
from sklearn.model_selection import train_test_split
from keras.layers import Dense,Dropout
from keras.regularizers import l2
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

datafile = "splicedDataML/mix6ml"

x_data = pd.read_csv(datafile+"X.csv",names=['s1','s2','s3','s4','s5'])
#y_dataR = np.genfromtxt(datafile+"Y.csv",delimiter=',',dtype=int)
#num_classes = np.max(y_dataR) + 1
#y_data = keras.utils.to_categorical(y_dataR, num_classes)
#x_train, x_test, y_train, y_test = train_test_split(x_data,y_data, test_size=0.20, random_state=0)
#x_train = x_data[:880]
x_test = x_data
#y_train = y_data[:880]
#y_test = y_data
#x_train.shape,y_train.shape,x_test.shape,y_test.shape

model = keras.models.load_model('modelSave')
print(model.summary())
#print('Training Accuracy : ' , np.mean(model.history["accuracy"]))
#print('Validation Accuracy : ' , np.mean(model.history["val_accuracy"]))
y_pred = model.predict(x_test)
#print(x_test)
#y_pred = model.predict(np.array([[400,400,400,400,400]]*50))
rounded = [np.argmax(x) for x in y_pred]

#y_testComp = [np.argmax(x) for x in y_test]
#print(confusion_matrix(y_testComp,rounded))
gestures = {
    1: "relax",
    2: "extend",
    3: "fist",
    4: "one",
    5: "transition"
}
print(rounded[-1])
